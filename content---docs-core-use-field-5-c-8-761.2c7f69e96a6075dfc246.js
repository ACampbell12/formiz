(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{46:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",function(){return i}),n.d(t,"rightToc",function(){return o}),n.d(t,"default",function(){return b});n(0);var a=n(63);n(64);function l(){return(l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function r(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var i={id:"use-field",title:"useField() hook"},o=[{value:"Concept",id:"concept",children:[]},{value:"Hook values",id:"hook-values",children:[{value:"value",id:"value",children:[]},{value:"setValue()",id:"setvalue",children:[]},{value:"isValid",id:"isvalid",children:[]},{value:"isPristine",id:"ispristine",children:[]},{value:"isSubmitted",id:"issubmitted",children:[]},{value:"errorMessage",id:"errormessage",children:[]},{value:"errorMessages",id:"errormessages",children:[]},{value:"resetKey",id:"resetkey",children:[]}]},{value:"Field props",id:"field-props",children:[{value:"name *",id:"name-",children:[]},{value:"defaultValue",id:"defaultvalue",children:[]},{value:"id",id:"id",children:[]},{value:"isRequired",id:"isrequired",children:[]},{value:"keepValue",id:"keepvalue",children:[]},{value:"onChange(fieldValue)",id:"onchangefieldvalue",children:[]},{value:"validations",id:"validations",children:[]}]},{value:"PropTypes validations",id:"proptypes-validations",children:[]}],c={rightToc:o},u="wrapper";function b(e){var t=e.components,n=r(e,["components"]);return Object(a.b)(u,l({},c,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"concept"},"Concept"),Object(a.b)("p",null,"When using the ",Object(a.b)("inlineCode",{parentName:"p"},"useField")," hook, you need to pass your component ",Object(a.b)("inlineCode",{parentName:"p"},"props")," to the hook."),Object(a.b)("p",null,"Then the hook gives you access to the field state."),Object(a.b)("pre",null,Object(a.b)("code",l({parentName:"pre"},{className:"language-jsx"}),"import React from 'react'\nimport { useField } from '@formiz/core'\n\nconst MyField = (props) => {\n  const {\n    value,\n    setValue,\n    isValid,\n    errorMessage,\n  } = useField(props)\n\n  return (\n    ...\n  )\n}\n")),Object(a.b)("hr",null),Object(a.b)("h2",{id:"hook-values"},"Hook values"),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"useField")," return an object with the following properties:"),Object(a.b)("h3",{id:"value"},Object(a.b)("inlineCode",{parentName:"h3"},"value")),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"Get the current value of the field.")),Object(a.b)("h3",{id:"setvalue"},Object(a.b)("inlineCode",{parentName:"h3"},"setValue()")),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"Set the value of the field.")),Object(a.b)("h3",{id:"isvalid"},Object(a.b)("inlineCode",{parentName:"h3"},"isValid")),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"Returns ",Object(a.b)("inlineCode",{parentName:"p"},"true")," if the field is valid.")),Object(a.b)("h3",{id:"ispristine"},Object(a.b)("inlineCode",{parentName:"h3"},"isPristine")),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"Returns ",Object(a.b)("inlineCode",{parentName:"p"},"true")," if the field has not been changed.")),Object(a.b)("h3",{id:"issubmitted"},Object(a.b)("inlineCode",{parentName:"h3"},"isSubmitted")),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"Returns ",Object(a.b)("inlineCode",{parentName:"p"},"true")," either if the current step or the form is submitted.")),Object(a.b)("h3",{id:"errormessage"},Object(a.b)("inlineCode",{parentName:"h3"},"errorMessage")),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"Returns the first error message.")),Object(a.b)("h3",{id:"errormessages"},Object(a.b)("inlineCode",{parentName:"h3"},"errorMessages")),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"Returns all error messages.")),Object(a.b)("h3",{id:"resetkey"},Object(a.b)("inlineCode",{parentName:"h3"},"resetKey")),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"Allows you to put a key on elements that you want to be reinitialize when the from is reset.",Object(a.b)("br",null),"\nCan be useful for element like ",Object(a.b)("inlineCode",{parentName:"p"},"<input>")," or ",Object(a.b)("inlineCode",{parentName:"p"},"<select>"),".")),Object(a.b)("pre",null,Object(a.b)("code",l({parentName:"pre"},{className:"language-jsx"}),"<input key={resetKey} />\n")),Object(a.b)("hr",null),Object(a.b)("h2",{id:"field-props"},"Field props"),Object(a.b)("p",null,"When a component is created with the ",Object(a.b)("inlineCode",{parentName:"p"},"useField()")," hook,\nyou can pass the following props to the component."),Object(a.b)("h3",{id:"name-"},Object(a.b)("inlineCode",{parentName:"h3"},"name")," *"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Required")),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"The name is required to register the field in the form.")),Object(a.b)("pre",null,Object(a.b)("code",l({parentName:"pre"},{className:"language-jsx"}),'<Field name="myFieldName" />\n')),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Nested values")),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"name")," props can use lodash-like dot paths to reference nested values."),Object(a.b)("pre",null,Object(a.b)("code",l({parentName:"pre"},{className:"language-jsx"}),"<Field name=\"fieldA\" />\n<Field name=\"fieldB\" />\n<Field name=\"myGroup.fieldA\" />\n<Field name=\"myGroup.fieldB\" />\n\n/* Form values\n{\n  fieldA: 'value',\n  fieldB: 'value',\n  myGroup: {\n    fieldA: 'value',\n    fieldB: 'value',\n  },\n}\n*/\n")),Object(a.b)("h3",{id:"defaultvalue"},Object(a.b)("inlineCode",{parentName:"h3"},"defaultValue")),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"Pass an initial value to the field.")),Object(a.b)("h3",{id:"id"},Object(a.b)("inlineCode",{parentName:"h3"},"id")),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"Return a unique id")),Object(a.b)("pre",null,Object(a.b)("code",l({parentName:"pre"},{className:"language-jsx"}),'<Field name="myFieldName" />\n')),Object(a.b)("pre",null,Object(a.b)("code",l({parentName:"pre"},{className:"language-jsx"}),'<Field name="myFieldName" defaultValue="My initial value" />\n')),Object(a.b)("h3",{id:"isrequired"},Object(a.b)("inlineCode",{parentName:"h3"},"isRequired")),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"Shortcut for isRequired() validation")),Object(a.b)("pre",null,Object(a.b)("code",l({parentName:"pre"},{className:"language-jsx"}),'<Field name="myFieldName" isRequired />\n<Field name="myFieldName" isRequired="Field is required" />\n')),Object(a.b)("h3",{id:"keepvalue"},Object(a.b)("inlineCode",{parentName:"h3"},"keepValue")),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"Set to ",Object(a.b)("inlineCode",{parentName:"p"},"true")," to keep the value when the field is unmounted from the DOM. (default is ",Object(a.b)("inlineCode",{parentName:"p"},"false"),").")),Object(a.b)("h3",{id:"onchangefieldvalue"},Object(a.b)("inlineCode",{parentName:"h3"},"onChange(fieldValue)")),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"Triggered everytime that setValue() is called inside the field.")),Object(a.b)("h3",{id:"validations"},Object(a.b)("inlineCode",{parentName:"h3"},"validations")),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"An array of object with:"),Object(a.b)("ul",{parentName:"blockquote"},Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"rule(fieldValue, formValues)"),": Built in validation rule or custom validation function (must return ",Object(a.b)("inlineCode",{parentName:"li"},"true")," if the rule is valid)."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"message"),": The message if the rule is invalid."))),Object(a.b)("pre",null,Object(a.b)("code",l({parentName:"pre"},{className:"language-jsx"}),"<Field\n  name=\"myFieldName\"\n  validations={[\n    {\n      rule: isRequired(),\n      message: 'Field is required',\n    },\n    {\n      rule: isNotEmptyString(),\n      message: 'Field can\\'t be empty',\n    },\n    {\n      rule: (value, values) => value.toLowerCase() !== 'john',\n      message: 'Field can\\'t be john',\n    },\n  ]}\n/>\n")),Object(a.b)("hr",null),Object(a.b)("h2",{id:"proptypes-validations"},"PropTypes validations"),Object(a.b)("p",null,"If you using ",Object(a.b)("a",l({parentName:"p"},{href:"https://www.npmjs.com/package/prop-types"}),"prop-types")," to document props in your project,\nyou can get ",Object(a.b)("inlineCode",{parentName:"p"},"fieldPropTypes")," and ",Object(a.b)("inlineCode",{parentName:"p"},"fieldDefaultProps")," from ",Object(a.b)("inlineCode",{parentName:"p"},"@formiz/core")," to pass to your custom fields for PropTypes validations."),Object(a.b)("pre",null,Object(a.b)("code",l({parentName:"pre"},{className:"language-jsx"}),"// MyField.js\nimport React from 'react'\nimport { useField, fieldPropTypes, fieldDefaultProps } from '@formiz/core'\n\nconst MyField = (props) => {\n  // ...\n}\n\nMyField.propTypes = {\n  ...fieldPropTypes,\n  // Your custom props\n}\n\nMyField.defaultProps = {\n  ...fieldDefaultProps,\n  // Your custom props\n}\n")))}b.isMDXComponent=!0},63:function(e,t,n){"use strict";n.d(t,"a",function(){return o}),n.d(t,"b",function(){return s});var a=n(0),l=n.n(a),r=l.a.createContext({}),i=function(e){var t=l.a.useContext(r),n=t;return e&&(n="function"==typeof e?e(t):Object.assign({},t,e)),n},o=function(e){var t=i(e.components);return l.a.createElement(r.Provider,{value:t},e.children)};var c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return l.a.createElement(l.a.Fragment,{},t)}},b=function(e){var t=e.components,n=e.mdxType,a=e.originalType,r=e.parentName,o=function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&-1===t.indexOf(a)&&(n[a]=e[a]);return n}(e,["components","mdxType","originalType","parentName"]),c=i(t),b=n,s=c[r+"."+b]||c[b]||u[b]||a;return t?l.a.createElement(s,Object.assign({},o,{components:t})):l.a.createElement(s,o)};function s(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=b;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o[c]="string"==typeof e?e:a,i[1]=o;for(var s=2;s<r;s++)i[s]=n[s];return l.a.createElement.apply(null,i)}return l.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},64:function(e,t,n){"use strict";var a=n(0),l=n.n(a),r=function(){return l.a.createElement("div",{className:"callout is-warning"},"This is an"," ",l.a.createElement("strong",null,"early and alpha release")," ","of Formiz."," ","API is subject to change."," ",l.a.createElement("strong",null,"Do not use in production."))},i=n(6),o=n.n(i),c=function(e){var t=e.of;return l.a.createElement("div",{className:"callout is-warning"},"Work in Progress."," ",l.a.createElement("strong",null,t)," ","is not implemented yet.")};c.propTypes={of:o.a.string},c.defaultProps={of:"This"};var u=function(e){var t=e.of;return l.a.createElement("div",{className:"callout is-warning"},"Work in Progress."," ",l.a.createElement("strong",null,"@formiz/",t)," ","is not published on NPM yet.")};u.propTypes={of:o.a.string},u.defaultProps={of:"core"};n.d(t,"a",function(){return r}),n.d(t,"b",function(){return c})}}]);