(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{142:function(e,n,i){"use strict";i.r(n),i.d(n,"frontMatter",(function(){return r})),i.d(n,"metadata",(function(){return l})),i.d(n,"rightToc",(function(){return m})),i.d(n,"default",(function(){return d}));var a=i(2),t=i(9),s=(i(0),i(164)),r={id:"rules",title:"Validation Rules"},l={id:"validations/rules",title:"Validation Rules",description:"isRequired()",source:"@site/docs/validations/rules.mdx",permalink:"/docs/validations/rules",editUrl:"https://github.com/ivan-dalmet/formiz/edit/master/documentation/docs/validations/rules.mdx",sidebar:"docs",previous:{title:"useField() hook",permalink:"/docs/core/use-field"}},m=[{value:"isRequired()",id:"isrequired",children:[]},{value:"isNotEmptyString()",id:"isnotemptystring",children:[]},{value:"isNotEmptyArray()",id:"isnotemptyarray",children:[]},{value:"isEmail()",id:"isemail",children:[]},{value:"isNumber()",id:"isnumber",children:[]},{value:"isMinNumber(min)",id:"isminnumbermin",children:[]},{value:"isMaxNumber(max)",id:"ismaxnumbermax",children:[]},{value:"isInRangeNumber(min, max)",id:"isinrangenumbermin-max",children:[]},{value:"isPercentage()",id:"ispercentage",children:[]},{value:"isLength(length)",id:"islengthlength",children:[]},{value:"isMinLength(min)",id:"isminlengthmin",children:[]},{value:"isMaxLength(max)",id:"ismaxlengthmax",children:[]}],b={rightToc:m};function d(e){var n=e.components,i=Object(t.a)(e,["components"]);return Object(s.b)("wrapper",Object(a.a)({},b,i,{components:n,mdxType:"MDXLayout"}),Object(s.b)("h3",{id:"isrequired"},"isRequired()"),Object(s.b)("p",null,"Test if there is value."),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),"import { isRequired } from '@formiz/validations'\n\n<MyField\n  name=\"fieldName\"\n  validations={[\n    {\n      rule: isRequired(),\n      message: 'This field is required',\n    },\n  ]}\n>\n")),Object(s.b)("h3",{id:"isnotemptystring"},"isNotEmptyString()"),Object(s.b)("p",null,"Test if a string has not only spaces."),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),"import { isNotEmptyString } from '@formiz/validations'\n\n<MyField\n  name=\"fieldName\"\n  validations={[\n    {\n      rule: isNotEmptyString(),\n      message: 'This field can\\'t be empty',\n    },\n  ]}\n>\n")),Object(s.b)("h3",{id:"isnotemptyarray"},"isNotEmptyArray()"),Object(s.b)("p",null,"Test if an array is not empty."),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),"import { isNotEmptyArray } from '@formiz/validations'\n\n<MyField\n  name=\"fieldName\"\n  validations={[\n    {\n      rule: isNotEmptyArray(),\n      message: 'This array can\\'t be empty',\n    },\n  ]}\n>\n")),Object(s.b)("h3",{id:"isemail"},"isEmail()"),Object(s.b)("p",null,"Test if a string is an valid email."),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),"import { isEmail } from '@formiz/validations'\n\n<MyField\n  name=\"fieldName\"\n  validations={[\n    {\n      rule: isEmail(),\n      message: 'This is not a valid email',\n    },\n  ]}\n>\n")),Object(s.b)("h3",{id:"isnumber"},"isNumber()"),Object(s.b)("p",null,"Test if the value is a number."),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),"import { isNumber } from '@formiz/validations'\n\n<MyField\n  name=\"fieldName\"\n  validations={[\n    {\n      rule: isNumber(),\n      message: 'This is not a number',\n    },\n  ]}\n>\n")),Object(s.b)("h3",{id:"isminnumbermin"},"isMinNumber(min)"),Object(s.b)("p",null,"Test if the value is a number and under a max value."),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),"import { isMinNumber } from '@formiz/validations'\n\n<MyField\n  name=\"fieldName\"\n  validations={[\n    {\n      rule: isMinNumber(10),\n      message: 'Should be a number over 10',\n    },\n  ]}\n>\n")),Object(s.b)("h3",{id:"ismaxnumbermax"},"isMaxNumber(max)"),Object(s.b)("p",null,"Test if the value is a number and under a max value."),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),"import { isMaxNumber } from '@formiz/validations'\n\n<MyField\n  name=\"fieldName\"\n  validations={[\n    {\n      rule: isMaxNumber(10),\n      message: 'Should be a number under 10',\n    },\n  ]}\n>\n")),Object(s.b)("h3",{id:"isinrangenumbermin-max"},"isInRangeNumber(min, max)"),Object(s.b)("p",null,"Test if the value is a number and in a range between a min and a max."),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),"import { isInRangeNumber } from '@formiz/validations'\n\n<MyField\n  name=\"fieldName\"\n  validations={[\n    {\n      rule: isInRangeNumber(1, 5),\n      message: 'Should be a number between 1 and 5',\n    },\n  ]}\n>\n")),Object(s.b)("h3",{id:"ispercentage"},"isPercentage()"),Object(s.b)("p",null,"Test if the value is a number between 0 and 100."),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),"import { isInRangeNumber } from '@formiz/validations'\n\n<MyField\n  name=\"fieldName\"\n  validations={[\n    {\n      rule: isPercentage(),\n      message: 'This is not a valid percentage',\n    },\n  ]}\n>\n")),Object(s.b)("h3",{id:"islengthlength"},"isLength(length)"),Object(s.b)("p",null,"Test if a string or an array has a specific length."),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),"import { isLength } from '@formiz/validations'\n\n<MyField\n  name=\"fieldName\"\n  validations={[\n    {\n      rule: isLength(4),\n      message: 'This has not a length of 4',\n    },\n  ]}\n>\n")),Object(s.b)("h3",{id:"isminlengthmin"},"isMinLength(min)"),Object(s.b)("p",null,"Test if a string or an array has a minimum length."),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),"import { isMinLength } from '@formiz/validations'\n\n<MyField\n  name=\"fieldName\"\n  validations={[\n    {\n      rule: isMinLength(4),\n      message: 'This should at least have a length of 4',\n    },\n  ]}\n>\n")),Object(s.b)("h3",{id:"ismaxlengthmax"},"isMaxLength(max)"),Object(s.b)("p",null,"Test if a string or an array has a maximum length."),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),"import { isMaxLength } from '@formiz/validations'\n\n<MyField\n  name=\"fieldName\"\n  validations={[\n    {\n      rule: isMaxLength(4),\n      message: 'This should have a length of 4 or less',\n    },\n  ]}\n>\n")))}d.isMDXComponent=!0}}]);