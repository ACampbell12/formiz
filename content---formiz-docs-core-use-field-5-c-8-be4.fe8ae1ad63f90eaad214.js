(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{42:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",function(){return i}),t.d(n,"rightToc",function(){return u}),t.d(n,"default",function(){return b});t(0);var r=t(56),a=t(57);function o(){return(o=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i={id:"use-field",title:"useField() hook"},u=[{value:"Concept",id:"concept",children:[]},{value:"Hook values",id:"hook-values",children:[]},{value:"Field props",id:"field-props",children:[]},{value:"Example",id:"example",children:[]}],c={rightToc:u},s="wrapper";function b(e){var n=e.components,t=l(e,["components"]);return Object(r.b)(s,o({},c,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"concept"},"Concept"),Object(r.b)("p",null,"When using the ",Object(r.b)("inlineCode",{parentName:"p"},"useField")," hook, you need to pass your component ",Object(r.b)("inlineCode",{parentName:"p"},"props")," to the hook."),Object(r.b)("p",null,"Then the hook give you access to the field state."),Object(r.b)("pre",null,Object(r.b)("code",o({parentName:"pre"},{className:"language-jsx"}),"import React from 'react'\nimport { useField } from '@formiz/core'\n\nconst MyField = (props) => {\n  const {\n    value,\n    setValue,\n    isValid,\n    errorMessage,\n  } = useField(props)\n\n  return (\n    ...\n  )\n}\n")),Object(r.b)("p",null,"You can also be more verbose and only pass the 6 required props to the hook (",Object(r.b)("inlineCode",{parentName:"p"},"name"),", ",Object(r.b)("inlineCode",{parentName:"p"},"defaultValue"),", ",Object(r.b)("inlineCode",{parentName:"p"},"isRequired"),", ",Object(r.b)("inlineCode",{parentName:"p"},"validations"),", ",Object(r.b)("inlineCode",{parentName:"p"},"keepValue")," and ",Object(r.b)("inlineCode",{parentName:"p"},"onChange"),")."),Object(r.b)("pre",null,Object(r.b)("code",o({parentName:"pre"},{className:"language-jsx"}),"useField({ name, defaultValue, isRequired, validations, keepValue, onChange })\n")),Object(r.b)("hr",null),Object(r.b)("h2",{id:"hook-values"},"Hook values"),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"useField")," return an object with the following properties:"),Object(r.b)("h4",{id:"value"},Object(r.b)("inlineCode",{parentName:"h4"},"value")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Get the current value of the field.")),Object(r.b)("h4",{id:"setvalue"},Object(r.b)("inlineCode",{parentName:"h4"},"setValue()")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Set the value of the field.")),Object(r.b)("h4",{id:"isvalid"},Object(r.b)("inlineCode",{parentName:"h4"},"isValid")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Returns ",Object(r.b)("inlineCode",{parentName:"p"},"true")," if the field is valid.")),Object(r.b)("h4",{id:"errormessage"},Object(r.b)("inlineCode",{parentName:"h4"},"errorMessage")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Return the first error message.")),Object(r.b)("h4",{id:"errormessages"},Object(r.b)("inlineCode",{parentName:"h4"},"errorMessages")),Object(r.b)(a.a,{of:"errorMessages",mdxType:"NotImplemented"}),Object(r.b)("hr",null),Object(r.b)("h2",{id:"field-props"},"Field props"),Object(r.b)("p",null,"When a component is created with the ",Object(r.b)("inlineCode",{parentName:"p"},"useField()")," hook,\nyou can pass the following props to the component."),Object(r.b)("h4",{id:"name-required"},Object(r.b)("inlineCode",{parentName:"h4"},"name")," ","[required]"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"The name is required to register the field in the form.")),Object(r.b)("pre",null,Object(r.b)("code",o({parentName:"pre"},{className:"language-jsx"}),'<Field name="myFieldName" />\n')),Object(r.b)("h4",{id:"defaultvalue"},Object(r.b)("inlineCode",{parentName:"h4"},"defaultValue")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Pass an initial value to the field.")),Object(r.b)("pre",null,Object(r.b)("code",o({parentName:"pre"},{className:"language-jsx"}),'<Field name="myFieldName" defaultValue="My initial value" />\n')),Object(r.b)("h4",{id:"isrequired"},Object(r.b)("inlineCode",{parentName:"h4"},"isRequired")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Shortcut for isRequired() validation")),Object(r.b)("pre",null,Object(r.b)("code",o({parentName:"pre"},{className:"language-jsx"}),'<Field name="myFieldName" isRequired />\n<Field name="myFieldName" isRequired="Field is required" />\n')),Object(r.b)("h4",{id:"validations"},Object(r.b)("inlineCode",{parentName:"h4"},"validations")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"An array of object with:"),Object(r.b)("ul",{parentName:"blockquote"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"rule(fieldValue, formValues)"),": Built in validation rule or custom validation function (must return ",Object(r.b)("inlineCode",{parentName:"li"},"true")," if the rule is valid)."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"message"),": The message if the rule is invalid."))),Object(r.b)("pre",null,Object(r.b)("code",o({parentName:"pre"},{className:"language-jsx"}),"<Field\n  name=\"myFieldName\"\n  validations={[\n    {\n      rule: isRequired(),\n      message: 'Field is required',\n    },\n    {\n      rule: isNotEmptyString(),\n      message: 'Field can\\'t be empty',\n    },\n    {\n      rule: (value, values) => value.toLowerCase() !== 'john',\n      message: 'Field can\\'t be john',\n    },\n  ]}\n/>\n")),Object(r.b)("h4",{id:"keepvalue"},Object(r.b)("inlineCode",{parentName:"h4"},"keepValue")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Set to ",Object(r.b)("inlineCode",{parentName:"p"},"true")," to keep the value when the field is unmounted from the DOM. (default is ",Object(r.b)("inlineCode",{parentName:"p"},"false"),").")),Object(r.b)("h4",{id:"onchangefieldvalue-formvalues"},Object(r.b)("inlineCode",{parentName:"h4"},"onChange(fieldValue, formValues)")),Object(r.b)(a.a,{of:"onChange(fieldValue, formValues)",mdxType:"NotImplemented"}),Object(r.b)("hr",null),Object(r.b)("h2",{id:"example"},"Example"),Object(r.b)("h4",{id:"create-your-custom-field"},"Create your custom field"),Object(r.b)("pre",null,Object(r.b)("code",o({parentName:"pre"},{className:"language-jsx"}),"// MyField.js\nimport React from 'react'\nimport { useField } from '@formiz/core'\n\nconst MyField = (props) => {\n  const { value, setValue, errorMessage, isValid } = useField(props)\n  const { customProperty }Â = props\n\n  return (\n    <div>\n      <input type=\"text\" defaultValue={value} onChange={(e) => setValue(e.target.value)} />\n      <strong>{ customProperty }</strong>\n      {!isValid && (\n        <p>{ errorMessage }</p>\n      )}\n    </div>\n  )\n}\n")),Object(r.b)("h4",{id:"use-your-custom-field"},"Use your custom field"),Object(r.b)("pre",null,Object(r.b)("code",o({parentName:"pre"},{className:"language-jsx"}),"import React from 'react'\nimport { Formiz } from '@formiz/core'\nimport { MyField } from './MyField'\n\nexport const MyForm = () => {\n  const submitForm = (values) => {\n    console.log(values) // { myCustomField: 'value' }\n  }\n\n  return (\n    <Formiz onSubmit={submitForm} >\n      <MyField\n        name=\"myCustomField\"\n        customProperty=\"Custom Field\"\n        isRequired=\"Custom Field is required\"\n      />\n      <button type=\"submit\">\n        Submit\n      </button>\n    </Formiz>\n  )\n}\n")))}b.isMDXComponent=!0},56:function(e,n,t){"use strict";t.d(n,"a",function(){return i}),t.d(n,"b",function(){return b});var r=t(0),a=t.n(r),o=a.a.createContext({}),l=function(e){var n=a.a.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):Object.assign({},n,e)),t},i=function(e){var n=l(e.components);return a.a.createElement(o.Provider,{value:n},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){return a.a.createElement(a.a.Fragment,{},e.children)}},s=function(e){var n=e.components,t=e.mdxType,r=e.originalType,o=e.parentName,i=function(e,n){var t={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&-1===n.indexOf(r)&&(t[r]=e[r]);return t}(e,["components","mdxType","originalType","parentName"]),u=l(n);return a.a.createElement(u[o+"."+t]||u[t]||c[t]||r,n?Object.assign({},i,{components:n}):i)};function b(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,l=new Array(o);l[0]=s;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i[u]="string"==typeof e?e:r,l[1]=i;for(var b=2;b<o;b++)l[b]=t[b];return a.a.createElement.apply(null,l)}return a.a.createElement.apply(null,t)}s.displayName="MDXCreateElement"},57:function(e,n,t){"use strict";var r=t(0),a=t.n(r),o=t(6),l=t.n(o),i=function(e){var n=e.of;return a.a.createElement("div",{className:"callout is-warning"},"Work in Progress."," ",a.a.createElement("strong",null,n)," ","is not implemented yet.")};i.propTypes={of:l.a.string},i.defaultProps={of:"This"};var u=function(e){var n=e.of;return a.a.createElement("div",{className:"callout is-warning"},"Work in Progress."," ",a.a.createElement("strong",null,"@formiz/",n)," ","is not published on NPM yet.")};u.propTypes={of:l.a.string},u.defaultProps={of:"core"};var c=function(){return a.a.createElement("div",{className:"callout is-warning"},"This section is a work in progress.")};t.d(n,"a",function(){return i}),t.d(n,"b",function(){return u}),t.d(n,"c",function(){return c})}}]);