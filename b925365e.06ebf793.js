(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{113:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return l})),t.d(n,"rightToc",(function(){return c})),t.d(n,"default",(function(){return u}));var r=t(2),o=t(7),a=(t(0),t(126)),i={id:"formiz",title:"<Formiz> component"},l={id:"core/formiz",title:"<Formiz> component",description:"Import",source:"@site/docs/core/Formiz-component.mdx",permalink:"/docs/core/formiz",editUrl:"https://github.com/ivan-dalmet/formiz/edit/master/documentation/docs/core/Formiz-component.mdx",sidebar:"docs",previous:{title:"Other examples",permalink:"/docs/demos/other-examples"},next:{title:"<FormizStep> component",permalink:"/docs/core/formiz-step"}},c=[{value:"Import",id:"import",children:[]},{value:"Props",id:"props",children:[{value:"onSubmit(values)",id:"onsubmitvalues",children:[]},{value:"onValidSubmit(values)",id:"onvalidsubmitvalues",children:[]},{value:"onInvalidSubmit(values)",id:"oninvalidsubmitvalues",children:[]},{value:"onChange(values)",id:"onchangevalues",children:[]},{value:"onValid()",id:"onvalid",children:[]},{value:"onInvalid()",id:"oninvalid",children:[]},{value:"autoForm",id:"autoform",children:[]},{value:"id",id:"id",children:[]},{value:"connect",id:"connect",children:[]}]},{value:"Handle API errors",id:"handle-api-errors",children:[]}],b={rightToc:c};function u(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},b,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"import"},"Import"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx"}),"import { Formiz } from '@formiz/core'\n")),Object(a.b)("hr",null),Object(a.b)("h2",{id:"props"},"Props"),Object(a.b)("h3",{id:"onsubmitvalues"},"onSubmit(values)"),Object(a.b)("p",null,"Triggered when the form is ",Object(a.b)("strong",{parentName:"p"},"submitted"),"."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx"}),"<Formiz onSubmit={(values) => console.log(values)}>\n  {/* Your fields here */}\n</Formiz>\n")),Object(a.b)("h3",{id:"onvalidsubmitvalues"},"onValidSubmit(values)"),Object(a.b)("p",null,"Triggered when the form is ",Object(a.b)("strong",{parentName:"p"},"valid")," and ",Object(a.b)("strong",{parentName:"p"},"submitted"),"."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx"}),"<Formiz onValidSubmit={(values) => console.log(values)}>\n  {/* Your fields here */}\n</Formiz>\n")),Object(a.b)("h3",{id:"oninvalidsubmitvalues"},"onInvalidSubmit(values)"),Object(a.b)("p",null,"Triggered when the form is ",Object(a.b)("strong",{parentName:"p"},"invalid")," and ",Object(a.b)("strong",{parentName:"p"},"submitted"),"."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx"}),"<Formiz onInvalidSubmit={(values) => console.log(values)}>\n  {/* Your fields here */}\n</Formiz>\n")),Object(a.b)("h3",{id:"onchangevalues"},"onChange(values)"),Object(a.b)("p",null,"Triggered every time the form changes.",Object(a.b)("br",null),"\n\u26a0\ufe0f This is triggered when each field is mounted.",Object(a.b)("br",null),"\n\u2139\ufe0f Instead you can get ",Object(a.b)("inlineCode",{parentName:"p"},"values")," of the form with the ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/core/use-form#values"}),"useForm()")," hook."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx"}),"<Formiz onChange={(values) => console.log(values)}>\n  {/* Your fields here */}\n</Formiz>\n")),Object(a.b)("h3",{id:"onvalid"},"onValid()"),Object(a.b)("p",null,"Triggered when the form is ",Object(a.b)("strong",{parentName:"p"},"valid"),".",Object(a.b)("br",null),"\n\u2139\ufe0f Instead you can get ",Object(a.b)("inlineCode",{parentName:"p"},"isValid")," value with the ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/core/use-form#isvalid"}),"useForm()")," hook."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx"}),"<Formiz onValid={() => console.log('Form is valid')}>\n  {/* Your fields here */}\n</Formiz>\n")),Object(a.b)("h3",{id:"oninvalid"},"onInvalid()"),Object(a.b)("p",null,"Triggered when the form is ",Object(a.b)("strong",{parentName:"p"},"invalid"),".",Object(a.b)("br",null),"\n\u2139\ufe0f Instead you can get ",Object(a.b)("inlineCode",{parentName:"p"},"isValid")," value with the ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/core/use-form#isvalid"}),"useForm()")," hook."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx"}),"<Formiz onInvalid={() => console.log('Form is invalid')}>\n  {/* Your fields here */}\n</Formiz>\n")),Object(a.b)("h3",{id:"autoform"},"autoForm"),Object(a.b)("p",null,"Set to ",Object(a.b)("inlineCode",{parentName:"p"},"true")," to auto add a ",Object(a.b)("inlineCode",{parentName:"p"},"<form>")," element with auto onSubmit.",Object(a.b)("br",null),"\n\u2139\ufe0f Instead you can get the ",Object(a.b)("inlineCode",{parentName:"p"},"submit()")," method with the ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/core/use-form#submit"}),"useForm()")," hook and use it with your own ",Object(a.b)("inlineCode",{parentName:"p"},"<form>")," element."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx"}),"<Formiz autoForm>\n  {/* Your fields here */}\n</Formiz>\n")),Object(a.b)("h3",{id:"id"},"id"),Object(a.b)("p",null,"Allows you to pass a custom id will be used to create the ids of the fields. By default, it is generated automatically.\nBut for SSR rendering like in NextJS, you may want to replace the automatically generated identifiers by a predictable id."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx"}),'<Formiz id="custom-id">\n  {/* Your fields here */}\n</Formiz>\n')),Object(a.b)("h3",{id:"connect"},"connect"),Object(a.b)("p",null,"Allow you to connect your form with the ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/core/use-form"}),"useForm()")," hook.",Object(a.b)("br",null),"\nSee ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/core/use-form"}),"useForm() documentation")," for more details"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx"}),"const MyForm = () => {\n  const form = useForm()\n  return (\n    <Formiz connect={form}>\n      {/* Your fields here */}\n    </Formiz>\n  )\n}\n")),Object(a.b)("hr",null),Object(a.b)("h2",{id:"handle-api-errors"},"Handle API errors"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx"}),"const myForm = useForm()\n\n<Formiz\n  connect={myForm}\n  onValidSubmit={(values) => {\n    myForm.invalidateFields({\n      fieldName: 'Error message',\n    })\n  }}\n/>\n  {/* Your fields here */}\n</Formiz>\n")))}u.isMDXComponent=!0},126:function(e,n,t){"use strict";t.d(n,"a",(function(){return s})),t.d(n,"b",(function(){return p}));var r=t(0),o=t.n(r);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var b=o.a.createContext({}),u=function(e){var n=o.a.useContext(b),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},s=function(e){var n=u(e.components);return o.a.createElement(b.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},d=o.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,b=c(e,["components","mdxType","originalType","parentName"]),s=u(t),d=r,p=s["".concat(i,".").concat(d)]||s[d]||m[d]||a;return t?o.a.createElement(p,l(l({ref:n},b),{},{components:t})):o.a.createElement(p,l({ref:n},b))}));function p(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=d;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var b=2;b<a;b++)i[b]=t[b];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"}}]);