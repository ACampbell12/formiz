(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{42:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",function(){return i}),n.d(t,"rightToc",function(){return l}),n.d(t,"default",function(){return u});n(0);var r=n(56);function o(){return(o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i={id:"getting-started",title:"Getting Started"},l=[{value:"Install Formiz core",id:"install-formiz-core",children:[]},{value:"Create your first custom field",id:"create-your-first-custom-field",children:[]},{value:"Use your field in a form",id:"use-your-field-in-a-form",children:[]},{value:"That's it ðŸŽ‰",id:"thats-it-",children:[]},{value:"ðŸ§™ Multi Steps form",id:"ðŸ§™-multi-steps-form",children:[]}],m={rightToc:l},s="wrapper";function u(e){var t=e.components,n=a(e,["components"]);return Object(r.b)(s,o({},m,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h3",{id:"install-formiz-core"},"Install Formiz core"),Object(r.b)("p",null,"With ",Object(r.b)("a",o({parentName:"p"},{href:"https://yarnpkg.com"}),"Yarn")),Object(r.b)("pre",null,Object(r.b)("code",o({parentName:"pre"},{className:"language-bash"}),"yarn add @formiz/core\n")),Object(r.b)("p",null,"With ",Object(r.b)("a",o({parentName:"p"},{href:"https://www.npmjs.com/"}),"NPM")),Object(r.b)("pre",null,Object(r.b)("code",o({parentName:"pre"},{className:"language-bash"}),"npm install @formiz/core\n")),Object(r.b)("h3",{id:"create-your-first-custom-field"},"Create your first custom field"),Object(r.b)("p",null,"A custom field can be anything, not just inputs."),Object(r.b)("p",null,"Here there is an example with an input, but you can litteraly ",Object(r.b)("strong",{parentName:"p"},"turn anything into a field")," and you will ",Object(r.b)("strong",{parentName:"p"},"get validation for free"),"!"),Object(r.b)("pre",null,Object(r.b)("code",o({parentName:"pre"},{className:"language-jsx"}),"import React from 'react'\nimport { useField } from '@formiz/core'\n\nexport const MyField = (props) => {\n  const { value, setValue, errorMessage, isValid } = useField(props)\n  const { label } = props\n\n  return (\n    <div>\n      <label>\n        { label }\n      </label>\n      <input type=\"text\" defaultValue={value} onChange={(e) => setValue(e.target.value)} />\n      {!isValid && (\n        <p>\n          { errorMessage }\n        </p>\n      )}\n    </div>\n  )\n}\n")),Object(r.b)("h3",{id:"use-your-field-in-a-form"},"Use your field in a form"),Object(r.b)("p",null,"Then use your field as many time as you want :)"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},'Each field need a property "name"')," which will be the key in the object of values.",Object(r.b)("br",null),"\nSo, be sure that this key is ",Object(r.b)("strong",{parentName:"p"},"unique by form"),"."),Object(r.b)("pre",null,Object(r.b)("code",o({parentName:"pre"},{className:"language-jsx"}),'import React from \'react\'\nimport { Formiz, useForm } from \'@formiz/core\'\nimport { MyField } from \'./MyField\'\n\nexport const MyForm = () => {\n  const [myForm, myFormConnector] = useForm()\n\n  const submitForm = (values) => {\n    console.log(values) // { firstName: \'value\', lastName: \'value\' }\n  }\n\n  return (\n    <Formiz onValidSubmit={submitForm} connect={myFormConnector}>\n      <form onSubmit={myForm.submit}>\n        <MyField\n          name="firstName"\n          label="First Name"\n          isRequired="First Name is required"\n        />\n        <MyField\n          name="lastName"\n          label="Last Name"\n          isRequired="Last Name is required"\n        />\n        <button type="submit" disabled={!myForm.isValid}>\n          Submit\n        </button>\n      </form>\n    </Formiz>\n  )\n}\n')),Object(r.b)("h3",{id:"thats-it-"},"That's it ðŸŽ‰"),Object(r.b)("p",null,"Oh wait... you want to ",Object(r.b)("strong",{parentName:"p"},"turn the form into a mutli steps")," form?"),Object(r.b)("p",null,Object(r.b)("img",o({parentName:"p"},{src:"https://media2.giphy.com/media/12NUbkX6p4xOO4/giphy.gif?cid=790b76115d3f358a4832727977f39cad&rid=giphy.gif",alt:"Magic"}))),Object(r.b)("h3",{id:"ðŸ§™-multi-steps-form"},"ðŸ§™ Multi Steps form"),Object(r.b)("p",null,"You already have your field so we just need to update our form to use steps."),Object(r.b)("p",null,"Import the ",Object(r.b)("inlineCode",{parentName:"p"},"FormizStep")," component and use it to split the form into steps."),Object(r.b)("p",null,"We need also need to update the submit button to allow the user to navigate between steps."),Object(r.b)("pre",null,Object(r.b)("code",o({parentName:"pre"},{className:"language-jsx"}),'import React from \'react\'\nimport { Formiz, FormizStep, useForm } from \'@formiz/core\'\nimport { MyField } from \'./MyField\'\n\nexport const MyForm = () => {\n  const [myForm, myFormConnector] = useForm()\n\n  const submitForm = (values) => {\n    console.log(values) // { firstName: \'value\', lastName: \'value\' }\n  }\n\n  return (\n    <Formiz onValidSubmit={submitForm} connect={myFormConnector}>\n      <form onSubmit={myForm.submit}>\n        <FormizStep name="step1">\n          <MyField\n            name="firstName"\n            label="First Name"\n            isRequired="First Name is required"\n          />\n        </FormizStep>\n        <FormizStep name="step2">\n          <MyField\n            name="lastName"\n            label="Last Name"\n            isRequired="Last Name is required"\n          />\n        </FormizStep>\n        {!myForm.isFirstStep && (\n          <button type="button" onClick={myForm.prevStep}>\n            Back\n          </button>\n        )}\n        {myForm.isLastStep ? (\n          <button type="submit" disabled={!myForm.isValid}>\n            Submit\n          </button>\n        ) : (\n          <button type="button" onClick={myForm.nextStep} disabled={!myForm.isStepValid}>\n            Continue\n          </button>\n        )}\n      </form>\n    </Formiz>\n  )\n}\n')))}u.isMDXComponent=!0},56:function(e,t,n){"use strict";n.d(t,"a",function(){return l}),n.d(t,"b",function(){return c});var r=n(0),o=n.n(r),a=o.a.createContext({}),i=function(e){var t=o.a.useContext(a),n=t;return e&&(n="function"==typeof e?e(t):Object.assign({},t,e)),n},l=function(e){var t=i(e.components);return o.a.createElement(a.Provider,{value:t},e.children)},m="mdxType",s={inlineCode:"code",wrapper:function(e){return o.a.createElement(o.a.Fragment,{},e.children)}},u=function(e){var t=e.components,n=e.mdxType,r=e.originalType,a=e.parentName,l=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&-1===t.indexOf(r)&&(n[r]=e[r]);return n}(e,["components","mdxType","originalType","parentName"]),m=i(t);return o.a.createElement(m[a+"."+n]||m[n]||s[n]||r,t?Object.assign({},l,{components:t}):l)};function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:r,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);