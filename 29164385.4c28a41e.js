(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{114:function(e,n,a){"use strict";a.d(n,"a",(function(){return l})),a.d(n,"b",(function(){return u}));var i=a(0),t=a.n(i),r=t.a.createContext({}),s=function(e){var n=t.a.useContext(r),a=n;return e&&(a="function"==typeof e?e(n):Object.assign({},n,e)),a},l=function(e){var n=s(e.components);return t.a.createElement(r.Provider,{value:n},e.children)};var m="mdxType",o={inlineCode:"code",wrapper:function(e){var n=e.children;return t.a.createElement(t.a.Fragment,{},n)}},c=Object(i.forwardRef)((function(e,n){var a=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,m=function(e,n){var a={};for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&-1===n.indexOf(i)&&(a[i]=e[i]);return a}(e,["components","mdxType","originalType","parentName"]),c=s(a),u=i,d=c[l+"."+u]||c[u]||o[u]||r;return a?t.a.createElement(d,Object.assign({},{ref:n},m,{components:a})):t.a.createElement(d,Object.assign({},{ref:n},m))}));function u(e,n){var a=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=a.length,s=new Array(r);s[0]=c;var l={};for(var o in n)hasOwnProperty.call(n,o)&&(l[o]=n[o]);l.originalType=e,l[m]="string"==typeof e?e:i,s[1]=l;for(var u=2;u<r;u++)s[u]=a[u];return t.a.createElement.apply(null,s)}return t.a.createElement.apply(null,a)}c.displayName="MDXCreateElement"},564:function(e,n,a){"use strict";var i=a(0),t=a.n(i);var r=a(8),s=a.n(r);const l=({of:e})=>t.a.createElement("div",{className:"callout is-warning"},"Work in Progress."," ",t.a.createElement("strong",null,e)," ","is not implemented yet.");l.propTypes={of:s.a.string},l.defaultProps={of:"This"};const m=({of:e})=>t.a.createElement("div",{className:"callout is-warning"},"Work in Progress."," ",t.a.createElement("strong",null,"@formiz/",e)," ","is not published on NPM yet.");m.propTypes={of:s.a.string},m.defaultProps={of:"core"}},96:function(e,n,a){"use strict";a.r(n),a.d(n,"frontMatter",(function(){return s})),a.d(n,"metadata",(function(){return l})),a.d(n,"rightToc",(function(){return m})),a.d(n,"default",(function(){return u}));var i=a(1),t=a(6),r=(a(0),a(114)),s=(a(564),{id:"rules",title:"Validation Rules"}),l={id:"validations/rules",title:"Validation Rules",description:"import { NotImplemented } from '../../src/messages'",source:"@site/docs/validations/rules.mdx",permalink:"/docs/validations/rules",sidebar:"docs",previous:{title:"useField() hook",permalink:"/docs/core/use-field"}},m=[{value:"isRequired()",id:"isrequired",children:[]},{value:"isNotEmptyString()",id:"isnotemptystring",children:[]},{value:"isNotEmptyArray()",id:"isnotemptyarray",children:[]},{value:"isEmail()",id:"isemail",children:[]},{value:"isNumber()",id:"isnumber",children:[]},{value:"isMinNumber(min)",id:"isminnumbermin",children:[]},{value:"isMaxNumber(max)",id:"ismaxnumbermax",children:[]},{value:"isInRangeNumber(min, max)",id:"isinrangenumbermin-max",children:[]},{value:"isPercentage()",id:"ispercentage",children:[]},{value:"isLength(length)",id:"islengthlength",children:[]},{value:"isMinLength(min)",id:"isminlengthmin",children:[]},{value:"isMaxLength(max)",id:"ismaxlengthmax",children:[]}],o={rightToc:m},c="wrapper";function u(e){var n=e.components,a=Object(t.a)(e,["components"]);return Object(r.b)(c,Object(i.a)({},o,a,{components:n,mdxType:"MDXLayout"}),Object(r.b)("h3",{id:"isrequired"},"isRequired()"),Object(r.b)("p",null,"Test if there is value."),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-jsx"}),"import { isRequired } from '@formiz/validations'\n\n<MyField\n  name=\"fieldName\"\n  validations={[\n    {\n      rule: isRequired(),\n      message: 'This field is required',\n    },\n  ]}\n>\n")),Object(r.b)("h3",{id:"isnotemptystring"},"isNotEmptyString()"),Object(r.b)("p",null,"Test if a string has not only spaces."),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-jsx"}),"import { isNotEmptyString } from '@formiz/validations'\n\n<MyField\n  name=\"fieldName\"\n  validations={[\n    {\n      rule: isNotEmptyString(),\n      message: 'This field can\\'t be empty',\n    },\n  ]}\n>\n")),Object(r.b)("h3",{id:"isnotemptyarray"},"isNotEmptyArray()"),Object(r.b)("p",null,"Test if an array is not empty."),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-jsx"}),"import { isNotEmptyArray } from '@formiz/validations'\n\n<MyField\n  name=\"fieldName\"\n  validations={[\n    {\n      rule: isNotEmptyArray(),\n      message: 'This array can\\'t be empty',\n    },\n  ]}\n>\n")),Object(r.b)("h3",{id:"isemail"},"isEmail()"),Object(r.b)("p",null,"Test if a string is an valid email."),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-jsx"}),"import { isEmail } from '@formiz/validations'\n\n<MyField\n  name=\"fieldName\"\n  validations={[\n    {\n      rule: isEmail(),\n      message: 'This is not a valid email',\n    },\n  ]}\n>\n")),Object(r.b)("h3",{id:"isnumber"},"isNumber()"),Object(r.b)("p",null,"Test if the value is a number."),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-jsx"}),"import { isNumber } from '@formiz/validations'\n\n<MyField\n  name=\"fieldName\"\n  validations={[\n    {\n      rule: isNumber(),\n      message: 'This is not a number',\n    },\n  ]}\n>\n")),Object(r.b)("h3",{id:"isminnumbermin"},"isMinNumber(min)"),Object(r.b)("p",null,"Test if the value is a number and under a max value."),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-jsx"}),"import { isMinNumber } from '@formiz/validations'\n\n<MyField\n  name=\"fieldName\"\n  validations={[\n    {\n      rule: isMinNumber(10),\n      message: 'Should be a number over 10',\n    },\n  ]}\n>\n")),Object(r.b)("h3",{id:"ismaxnumbermax"},"isMaxNumber(max)"),Object(r.b)("p",null,"Test if the value is a number and under a max value."),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-jsx"}),"import { isMaxNumber } from '@formiz/validations'\n\n<MyField\n  name=\"fieldName\"\n  validations={[\n    {\n      rule: isMaxNumber(10),\n      message: 'Should be a number under 10',\n    },\n  ]}\n>\n")),Object(r.b)("h3",{id:"isinrangenumbermin-max"},"isInRangeNumber(min, max)"),Object(r.b)("p",null,"Test if the value is a number and in a range between a min and a max."),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-jsx"}),"import { isInRangeNumber } from '@formiz/validations'\n\n<MyField\n  name=\"fieldName\"\n  validations={[\n    {\n      rule: isInRangeNumber(1, 5),\n      message: 'Should be a number between 1 and 5',\n    },\n  ]}\n>\n")),Object(r.b)("h3",{id:"ispercentage"},"isPercentage()"),Object(r.b)("p",null,"Test if the value is a number between 0 and 100."),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-jsx"}),"import { isInRangeNumber } from '@formiz/validations'\n\n<MyField\n  name=\"fieldName\"\n  validations={[\n    {\n      rule: isPercentage(),\n      message: 'This is not a valid percentage',\n    },\n  ]}\n>\n")),Object(r.b)("h3",{id:"islengthlength"},"isLength(length)"),Object(r.b)("p",null,"Test if a string or an array has a specific length."),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-jsx"}),"import { isLength } from '@formiz/validations'\n\n<MyField\n  name=\"fieldName\"\n  validations={[\n    {\n      rule: isLength(4),\n      message: 'This has not a length of 4',\n    },\n  ]}\n>\n")),Object(r.b)("h3",{id:"isminlengthmin"},"isMinLength(min)"),Object(r.b)("p",null,"Test if a string or an array has a minimum length."),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-jsx"}),"import { isMinLength } from '@formiz/validations'\n\n<MyField\n  name=\"fieldName\"\n  validations={[\n    {\n      rule: isMinLength(4),\n      message: 'This should at least have a length of 4',\n    },\n  ]}\n>\n")),Object(r.b)("h3",{id:"ismaxlengthmax"},"isMaxLength(max)"),Object(r.b)("p",null,"Test if a string or an array has a maximum length."),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-jsx"}),"import { isMaxLength } from '@formiz/validations'\n\n<MyField\n  name=\"fieldName\"\n  validations={[\n    {\n      rule: isMaxLength(4),\n      message: 'This should have a length of 4 or less',\n    },\n  ]}\n>\n")))}u.isMDXComponent=!0}}]);