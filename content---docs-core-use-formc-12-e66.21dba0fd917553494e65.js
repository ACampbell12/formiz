(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{150:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return m}));n(167),n(170),n(169),n(171),n(172),n(0);var i=n(178);function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e}).apply(this,arguments)}var o={id:"use-form",title:"useForm() hook"},s=[{value:"Usage from outside <Formiz>",id:"usage-from-outside-formiz",children:[]},{value:"Usage from a child component of <Formiz>",id:"usage-from-a-child-component-of-formiz",children:[]},{value:"Hook values",id:"hook-values",children:[{value:"submit()",id:"submit",children:[]},{value:"isValid",id:"isvalid",children:[]},{value:"isSubmitted",id:"issubmitted",children:[]},{value:"values",id:"values",children:[]},{value:"invalidateFields()",id:"invalidatefields",children:[]},{value:"reset()",id:"reset",children:[]},{value:"resetKey",id:"resetkey",children:[]},{value:"getFieldStepName(fieldName)",id:"getfieldstepnamefieldname",children:[]},{value:"currentStep",id:"currentstep",children:[]},{value:"steps",id:"steps",children:[]},{value:"isStepValid",id:"isstepvalid",children:[]},{value:"isStepSubmitted",id:"isstepsubmitted",children:[]},{value:"isFirstStep",id:"isfirststep",children:[]},{value:"isLastStep",id:"islaststep",children:[]},{value:"submitStep()",id:"submitstep",children:[]},{value:"nextStep()",id:"nextstep",children:[]},{value:"prevStep()",id:"prevstep",children:[]},{value:"goToStep(name)",id:"gotostepname",children:[]}]}],l={rightToc:s},a="wrapper";function m(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,["components"]);return Object(i.b)(a,r({},l,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Use this hook to access values and methods from a ",Object(i.b)("inlineCode",{parentName:"p"},"<Formiz>")," component."),Object(i.b)("h2",{id:"usage-from-outside-formiz"},"Usage from outside ",Object(i.b)("inlineCode",{parentName:"h2"},"<Formiz>")),Object(i.b)("h4",{id:"1-connect-your-form"},"1. Connect your form"),Object(i.b)("pre",null,Object(i.b)("code",r({parentName:"pre"},{className:"language-jsx"}),"import React from 'react'\nimport { Formiz, useForm } from '@formiz/core'\nimport { MyField } from './MyField'\n\nexport const MyForm = () => {\n  const myForm = useForm()\n\n  return (\n    <Formiz connect={myForm}>\n      {/* Your fields here */}\n    </Formiz>\n  )\n}\n")),Object(i.b)("h4",{id:"2-access-values-and-methods"},"2. Access values and methods"),Object(i.b)("p",null,"You have now access to the form."),Object(i.b)("pre",null,Object(i.b)("code",r({parentName:"pre"},{className:"language-jsx"}),"import React from 'react'\nimport { Formiz, useForm } from '@formiz/core'\nimport { MyField } from './MyField'\n\nexport const MyForm = () => {\n  const myForm = useForm()\n\n  return (\n    <Formiz connect={myForm}>\n      <form onSubmit={myForm.submit}>\n        {myForm.isValid && 'The form is valid!'}\n        {/* Your fields here */}\n        <button type=\"submit\">\n          Submit\n        </button>\n      <form>\n    </Formiz>\n  )\n}\n")),Object(i.b)("h2",{id:"usage-from-a-child-component-of-formiz"},"Usage from a child component of ",Object(i.b)("inlineCode",{parentName:"h2"},"<Formiz>")),Object(i.b)("pre",null,Object(i.b)("code",r({parentName:"pre"},{className:"language-jsx"}),"import React from 'react'\nimport { Formiz, useForm } from '@formiz/core'\nimport { MyField } from './MyField'\n\nexport const MySubComponent = () => {\n  const myForm = useForm()\n\n  return myForm.isValid && 'The form is valid!';\n}\n\nexport const MyForm = () => {\n  return (\n    <Formiz>\n      ...\n      <MySubComponent />\n      ...\n    </Formiz>\n  )\n}\n")),Object(i.b)("hr",null),Object(i.b)("h2",{id:"hook-values"},"Hook values"),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"useForm")," return an object with the following properties:"),Object(i.b)("h3",{id:"submit"},Object(i.b)("inlineCode",{parentName:"h3"},"submit()")),Object(i.b)("p",null,"Allow you to submit the form"),Object(i.b)("pre",null,Object(i.b)("code",r({parentName:"pre"},{className:"language-jsx"}),'<Formiz connect={myForm}>\n  <form onSubmit={myForm.submit}>\n    {/* Your fields here */}\n    <button type="submit">\n      Submit\n    </button>\n  </form>\n</Formiz>\n')),Object(i.b)("h3",{id:"isvalid"},Object(i.b)("inlineCode",{parentName:"h3"},"isValid")),Object(i.b)("p",null,"Returns true if the form is valid."),Object(i.b)("h3",{id:"issubmitted"},Object(i.b)("inlineCode",{parentName:"h3"},"isSubmitted")),Object(i.b)("p",null,"Returns true if the form is submitted."),Object(i.b)("h3",{id:"values"},Object(i.b)("inlineCode",{parentName:"h3"},"values")),Object(i.b)("p",null,"Returns an object with all the values of the form."),Object(i.b)("h3",{id:"invalidatefields"},Object(i.b)("inlineCode",{parentName:"h3"},"invalidateFields()")),Object(i.b)("p",null,"Allow you to invalidate one or many fields.",Object(i.b)("br",null),"\nUseful for API errors or other external errors."),Object(i.b)("pre",null,Object(i.b)("code",r({parentName:"pre"},{className:"language-js"}),"invalidateFields([\n  'fieldName': 'My error message',\n  'secondFieldName': 'Another error message',\n])\n")),Object(i.b)("h3",{id:"reset"},Object(i.b)("inlineCode",{parentName:"h3"},"reset()")),Object(i.b)("p",null,"Allows to reset the form with all fields values to their defaultValue."),Object(i.b)("h3",{id:"resetkey"},Object(i.b)("inlineCode",{parentName:"h3"},"resetKey")),Object(i.b)("p",null,"Allows you to reset some internal state when the form is reset."),Object(i.b)("pre",null,Object(i.b)("code",r({parentName:"pre"},{className:"language-js"}),"useEffect(() => {\n  // Reset stuff here\n}, [myForm.resetKey]);\n")),Object(i.b)("h3",{id:"getfieldstepnamefieldname"},Object(i.b)("inlineCode",{parentName:"h3"},"getFieldStepName(fieldName)")),Object(i.b)("p",null,"Allows you to get the step name of a field."),Object(i.b)("h3",{id:"currentstep"},Object(i.b)("inlineCode",{parentName:"h3"},"currentStep")),Object(i.b)("p",null,"Returns the current step name."),Object(i.b)("h3",{id:"steps"},Object(i.b)("inlineCode",{parentName:"h3"},"steps")),Object(i.b)("p",null,"Returns an array with all the steps of the form."),Object(i.b)("h3",{id:"isstepvalid"},Object(i.b)("inlineCode",{parentName:"h3"},"isStepValid")),Object(i.b)("p",null,"Returns true if the current step is valid.\nReturns an array with all the steps of the form."),Object(i.b)("h3",{id:"isstepsubmitted"},Object(i.b)("inlineCode",{parentName:"h3"},"isStepSubmitted")),Object(i.b)("p",null,"Returns true if the current step is submitted."),Object(i.b)("h3",{id:"isfirststep"},Object(i.b)("inlineCode",{parentName:"h3"},"isFirstStep")),Object(i.b)("p",null,"Returns true if the current step is the first step."),Object(i.b)("h3",{id:"islaststep"},Object(i.b)("inlineCode",{parentName:"h3"},"isLastStep")),Object(i.b)("p",null,"Returns true if the current step is the last step."),Object(i.b)("h3",{id:"submitstep"},Object(i.b)("inlineCode",{parentName:"h3"},"submitStep()")),Object(i.b)("p",null,"Allows you to submit the current step."),Object(i.b)("pre",null,Object(i.b)("code",r({parentName:"pre"},{className:"language-jsx"}),'<Formiz connect={myForm}>\n  <form onSubmit={myForm.submitStep}>\n    <FormizStep name="step1">\n      {/* Your fields here */}\n    </FormizStep>\n    <FormizStep name="step2">\n      {/* Your fields here */}\n    </FormizStep>\n    <button type="submit">\n      Submit\n    </button>\n  </form>\n</Formiz>\n')),Object(i.b)("h3",{id:"nextstep"},Object(i.b)("inlineCode",{parentName:"h3"},"nextStep()")),Object(i.b)("p",null,"Move to the next step."),Object(i.b)("h3",{id:"prevstep"},Object(i.b)("inlineCode",{parentName:"h3"},"prevStep()")),Object(i.b)("p",null,"Move to the previous step."),Object(i.b)("h3",{id:"gotostepname"},Object(i.b)("inlineCode",{parentName:"h3"},"goToStep(name)")),Object(i.b)("p",null,"Go to a specific step."))}m.isMDXComponent=!0}}]);