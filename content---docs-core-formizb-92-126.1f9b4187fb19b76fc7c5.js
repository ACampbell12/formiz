(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{144:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return a})),t.d(n,"rightToc",(function(){return b})),t.d(n,"default",(function(){return c}));t(167),t(170),t(169),t(171),t(172),t(0);var o=t(178);function r(){return(r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e}).apply(this,arguments)}var a={id:"formiz",title:"<Formiz> component"},b=[{value:"Import",id:"import",children:[]},{value:"Props",id:"props",children:[{value:"onSubmit(values)",id:"onsubmitvalues",children:[]},{value:"onValidSubmit(values)",id:"onvalidsubmitvalues",children:[]},{value:"onInvalidSubmit(values)",id:"oninvalidsubmitvalues",children:[]},{value:"onChange(values)",id:"onchangevalues",children:[]},{value:"onValid()",id:"onvalid",children:[]},{value:"onInvalid()",id:"oninvalid",children:[]},{value:"autoForm",id:"autoform",children:[]},{value:"connect",id:"connect",children:[]}]},{value:"Handle API errors",id:"handle-api-errors",children:[]}],i={rightToc:b},l="wrapper";function c(e){var n=e.components,t=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,["components"]);return Object(o.b)(l,r({},i,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"import"},"Import"),Object(o.b)("pre",null,Object(o.b)("code",r({parentName:"pre"},{className:"language-jsx"}),"import { Formiz } from '@formiz/core'\n")),Object(o.b)("hr",null),Object(o.b)("h2",{id:"props"},"Props"),Object(o.b)("h3",{id:"onsubmitvalues"},Object(o.b)("inlineCode",{parentName:"h3"},"onSubmit(values)")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Triggered when the form is ",Object(o.b)("strong",{parentName:"p"},"submitted"),".")),Object(o.b)("h3",{id:"onvalidsubmitvalues"},Object(o.b)("inlineCode",{parentName:"h3"},"onValidSubmit(values)")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Triggered when the form is ",Object(o.b)("strong",{parentName:"p"},"valid")," and ",Object(o.b)("strong",{parentName:"p"},"submitted"),".")),Object(o.b)("h3",{id:"oninvalidsubmitvalues"},Object(o.b)("inlineCode",{parentName:"h3"},"onInvalidSubmit(values)")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Triggered when the form is ",Object(o.b)("strong",{parentName:"p"},"invalid")," and ",Object(o.b)("strong",{parentName:"p"},"submitted"),".")),Object(o.b)("h3",{id:"onchangevalues"},Object(o.b)("inlineCode",{parentName:"h3"},"onChange(values)")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Triggered every time the form changes.",Object(o.b)("br",null),"\n\u26a0\ufe0f This is triggered when each field is mounted.",Object(o.b)("br",null),"\n\u2139\ufe0f Instead you can get ",Object(o.b)("inlineCode",{parentName:"p"},"values")," of the form with the ",Object(o.b)("a",r({parentName:"p"},{href:"/docs/core/use-form"}),"useForm()")," hook.")),Object(o.b)("h3",{id:"onvalid"},Object(o.b)("inlineCode",{parentName:"h3"},"onValid()")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Triggered when the form is ",Object(o.b)("strong",{parentName:"p"},"valid"),".",Object(o.b)("br",null),"\n\u2139\ufe0f Instead you can get ",Object(o.b)("inlineCode",{parentName:"p"},"isValid")," value with the ",Object(o.b)("a",r({parentName:"p"},{href:"/docs/core/use-form"}),"useForm()")," hook.")),Object(o.b)("h3",{id:"oninvalid"},Object(o.b)("inlineCode",{parentName:"h3"},"onInvalid()")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Triggered when the form is ",Object(o.b)("strong",{parentName:"p"},"invalid"),".",Object(o.b)("br",null),"\n\u2139\ufe0f Instead you can get ",Object(o.b)("inlineCode",{parentName:"p"},"isValid")," value with the ",Object(o.b)("a",r({parentName:"p"},{href:"/docs/core/use-form"}),"useForm()")," hook.")),Object(o.b)("h3",{id:"autoform"},Object(o.b)("inlineCode",{parentName:"h3"},"autoForm")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Set to ",Object(o.b)("inlineCode",{parentName:"p"},"true")," to auto add a ",Object(o.b)("inlineCode",{parentName:"p"},"<form>")," element with auto onSubmit.",Object(o.b)("br",null),"\n\u2139\ufe0f Instead you can get the ",Object(o.b)("inlineCode",{parentName:"p"},"submit()")," method with the ",Object(o.b)("a",r({parentName:"p"},{href:"/docs/core/use-form"}),"useForm()")," hook and use it with your own ",Object(o.b)("inlineCode",{parentName:"p"},"<form>")," element.")),Object(o.b)("h3",{id:"connect"},Object(o.b)("inlineCode",{parentName:"h3"},"connect")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Allow you to connect your form with the ",Object(o.b)("a",r({parentName:"p"},{href:"/docs/core/use-form"}),"useForm()")," hook.",Object(o.b)("br",null),"\nSee ",Object(o.b)("a",r({parentName:"p"},{href:"/docs/core/use-form"}),"useForm() documentation")," for more details")),Object(o.b)("hr",null),Object(o.b)("h2",{id:"handle-api-errors"},"Handle API errors"),Object(o.b)("pre",null,Object(o.b)("code",r({parentName:"pre"},{className:"language-jsx"}),"const myForm = useForm()\n\n<Formiz\n  connect={myForm}\n  onValidSubmit={(values) => {\n    myForm.invalidateFields({\n      fieldName: 'Error message',\n    })\n  }}\n/>\n  {/* Your fields here */}\n</Formiz>\n")))}c.isMDXComponent=!0}}]);