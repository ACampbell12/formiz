(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{44:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",function(){return l}),t.d(n,"rightToc",function(){return i}),t.d(n,"default",function(){return c});t(0);var a=t(56);function r(){return(r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e}).apply(this,arguments)}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l={id:"use-field",title:"useField() hook"},i=[{value:"Concept",id:"concept",children:[]},{value:"Hook values",id:"hook-values",children:[]},{value:"Field props",id:"field-props",children:[]},{value:"Example",id:"example",children:[]}],u={rightToc:i},b="wrapper";function c(e){var n=e.components,t=o(e,["components"]);return Object(a.b)(b,r({},u,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"concept"},"Concept"),Object(a.b)("p",null,"When using the ",Object(a.b)("inlineCode",{parentName:"p"},"useField")," hook, you need to pass your component ",Object(a.b)("inlineCode",{parentName:"p"},"props")," to the hook."),Object(a.b)("p",null,"Then the hook give you access to the field state."),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-jsx"}),"import React from 'react'\nimport { useField } from '@formiz/core'\n\nconst MyField = (props) => {\n  const {\n    value,\n    setValue,\n    isValid,\n    errorMessage,\n  } = useField(props)\n\n  return (\n    ...\n  )\n}\n")),Object(a.b)("p",null,"You can also be more verbose and only pass the 6 required props to the hook (",Object(a.b)("inlineCode",{parentName:"p"},"name"),", ",Object(a.b)("inlineCode",{parentName:"p"},"defaultValue"),", ",Object(a.b)("inlineCode",{parentName:"p"},"isRequired"),", ",Object(a.b)("inlineCode",{parentName:"p"},"validations"),", ",Object(a.b)("inlineCode",{parentName:"p"},"keepValue")," and ",Object(a.b)("inlineCode",{parentName:"p"},"onChange"),")."),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-jsx"}),"useField({ name, defaultValue, isRequired, validations, keepValue, onChange })\n")),Object(a.b)("hr",null),Object(a.b)("h2",{id:"hook-values"},"Hook values"),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"useField")," return an object with the following properties:"),Object(a.b)("h4",{id:"value"},Object(a.b)("inlineCode",{parentName:"h4"},"value")),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"Get the current value of the field.")),Object(a.b)("h4",{id:"setvalue"},Object(a.b)("inlineCode",{parentName:"h4"},"setValue()")),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"Set the value of the field.")),Object(a.b)("h4",{id:"isvalid"},Object(a.b)("inlineCode",{parentName:"h4"},"isValid")),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"Returns ",Object(a.b)("inlineCode",{parentName:"p"},"true")," if the field is valid.")),Object(a.b)("h4",{id:"errormessage"},Object(a.b)("inlineCode",{parentName:"h4"},"errorMessage")),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"Return the first error message.")),Object(a.b)("h4",{id:"errormessages"},Object(a.b)("inlineCode",{parentName:"h4"},"errorMessages")),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"// TODO")),Object(a.b)("hr",null),Object(a.b)("h2",{id:"field-props"},"Field props"),Object(a.b)("p",null,"When a component is created with the ",Object(a.b)("inlineCode",{parentName:"p"},"useField()")," hook,\nyou can pass the following props to the component."),Object(a.b)("h4",{id:"name-required"},Object(a.b)("inlineCode",{parentName:"h4"},"name")," ","[required]"),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"The name is required to register the field in the form.")),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-jsx"}),'<Field name="myFieldName" />\n')),Object(a.b)("h4",{id:"defaultvalue"},Object(a.b)("inlineCode",{parentName:"h4"},"defaultValue")),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"Pass an initial value to the field.")),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-jsx"}),'<Field name="myFieldName" defaultValue="My initial value" />\n')),Object(a.b)("h4",{id:"isrequired"},Object(a.b)("inlineCode",{parentName:"h4"},"isRequired")),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"Shortcut for isRequired() validation")),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-jsx"}),'<Field name="myFieldName" isRequired />\n<Field name="myFieldName" isRequired="Field is required" />\n')),Object(a.b)("h4",{id:"validations"},Object(a.b)("inlineCode",{parentName:"h4"},"validations")),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"An array of object with:"),Object(a.b)("ul",{parentName:"blockquote"},Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"rule(fieldValue, formValues)"),": Built in validation rule or custom validation function (must return ",Object(a.b)("inlineCode",{parentName:"li"},"true")," if the rule is valid)."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"message"),": The message if the rule is invalid."))),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-jsx"}),"<Field\n  name=\"myFieldName\"\n  validations={[\n    {\n      rule: isRequired(),\n      message: 'Field is required',\n    },\n    {\n      rule: isNotEmptyString(),\n      message: 'Field can\\'t be empty',\n    },\n    {\n      rule: (value, values) => value.toLowerCase() !== 'john',\n      message: 'Field can\\'t be john',\n    },\n  ]}\n/>\n")),Object(a.b)("h4",{id:"keepvalue"},Object(a.b)("inlineCode",{parentName:"h4"},"keepValue")),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"Set to ",Object(a.b)("inlineCode",{parentName:"p"},"true")," to keep the value when the field is unmounted from the DOM. (default is ",Object(a.b)("inlineCode",{parentName:"p"},"false"),").")),Object(a.b)("h4",{id:"onchangefieldvalue-formvalues"},Object(a.b)("inlineCode",{parentName:"h4"},"onChange(fieldValue, formValues)")),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"// TODO")),Object(a.b)("hr",null),Object(a.b)("h2",{id:"example"},"Example"),Object(a.b)("h4",{id:"create-your-custom-field"},"Create your custom field"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-jsx"}),"// MyField.js\nimport React from 'react'\nimport { useField } from '@formiz/core'\n\nconst MyField = (props) => {\n  const { value, setValue, errorMessage, isValid } = useField(props)\n  const { customProperty }Â = props\n\n  return (\n    <div>\n      <input type=\"text\" defaultValue={value} onChange={(e) => setValue(e.target.value)} />\n      <strong>{ customProperty }</strong>\n      {!isValid && (\n        <p>{ errorMessage }</p>\n      )}\n    </div>\n  )\n}\n")),Object(a.b)("h4",{id:"use-your-custom-field"},"Use your custom field"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-jsx"}),"import React from 'react'\nimport { Formiz } from '@formiz/core'\nimport { MyField } from './MyField'\n\nexport const MyForm = () => {\n  const submitForm = (values) => {\n    console.log(values) // { myCustomField: 'value' }\n  }\n\n  return (\n    <Formiz onSubmit={submitForm} >\n      <MyField\n        name=\"myCustomField\"\n        customProperty=\"Custom Field\"\n        isRequired=\"Custom Field is required\"\n      />\n      <button type=\"submit\">\n        Submit\n      </button>\n    </Formiz>\n  )\n}\n")))}c.isMDXComponent=!0},56:function(e,n,t){"use strict";t.d(n,"a",function(){return i}),t.d(n,"b",function(){return p});var a=t(0),r=t.n(a),o=r.a.createContext({}),l=function(e){var n=r.a.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):Object.assign({},n,e)),t},i=function(e){var n=l(e.components);return r.a.createElement(o.Provider,{value:n},e.children)},u="mdxType",b={inlineCode:"code",wrapper:function(e){return r.a.createElement(r.a.Fragment,{},e.children)}},c=function(e){var n=e.components,t=e.mdxType,a=e.originalType,o=e.parentName,i=function(e,n){var t={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&-1===n.indexOf(a)&&(t[a]=e[a]);return t}(e,["components","mdxType","originalType","parentName"]),u=l(n);return r.a.createElement(u[o+"."+t]||u[t]||b[t]||a,n?Object.assign({},i,{components:n}):i)};function p(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=c;var i={};for(var b in n)hasOwnProperty.call(n,b)&&(i[b]=n[b]);i.originalType=e,i[u]="string"==typeof e?e:a,l[1]=i;for(var p=2;p<o;p++)l[p]=t[p];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,t)}c.displayName="MDXCreateElement"}}]);