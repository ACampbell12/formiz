(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{142:function(e,n,a){"use strict";a.r(n),a.d(n,"frontMatter",(function(){return r})),a.d(n,"rightToc",(function(){return s})),a.d(n,"default",(function(){return o}));a(59),a(32),a(23),a(24),a(60),a(0);var i=a(169);a(592);function t(){return(t=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var a=arguments[n];for(var i in a)Object.prototype.hasOwnProperty.call(a,i)&&(e[i]=a[i])}return e}).apply(this,arguments)}var r={id:"rules",title:"Validation Rules"},s=[{value:"isRequired()",id:"isrequired",children:[]},{value:"isNotEmptyString()",id:"isnotemptystring",children:[]},{value:"isNotEmptyArray()",id:"isnotemptyarray",children:[]},{value:"isEmail()",id:"isemail",children:[]},{value:"isNumber()",id:"isnumber",children:[]},{value:"isMinNumber(min)",id:"isminnumbermin",children:[]},{value:"isMaxNumber(max)",id:"ismaxnumbermax",children:[]},{value:"isInRangeNumber(min, max)",id:"isinrangenumbermin-max",children:[]},{value:"isPercentage()",id:"ispercentage",children:[]},{value:"isLength(length)",id:"islengthlength",children:[]},{value:"isMinLength(min)",id:"isminlengthmin",children:[]},{value:"isMaxLength(max)",id:"ismaxlengthmax",children:[]}],l={rightToc:s},m="wrapper";function o(e){var n=e.components,a=function(e,n){if(null==e)return{};var a,i,t={},r=Object.keys(e);for(i=0;i<r.length;i++)a=r[i],n.indexOf(a)>=0||(t[a]=e[a]);return t}(e,["components"]);return Object(i.b)(m,t({},l,a,{components:n,mdxType:"MDXLayout"}),Object(i.b)("h3",{id:"isrequired"},"isRequired()"),Object(i.b)("p",null,"Test if there is value."),Object(i.b)("pre",null,Object(i.b)("code",t({parentName:"pre"},{className:"language-jsx"}),"import { isRequired } from '@formiz/validations'\n\n<MyField\n  name=\"fieldName\"\n  validations={[\n    {\n      rule: isRequired(),\n      message: 'This field is required',\n    },\n  ]}\n>\n")),Object(i.b)("h3",{id:"isnotemptystring"},"isNotEmptyString()"),Object(i.b)("p",null,"Test if a string has not only spaces."),Object(i.b)("pre",null,Object(i.b)("code",t({parentName:"pre"},{className:"language-jsx"}),"import { isNotEmptyString } from '@formiz/validations'\n\n<MyField\n  name=\"fieldName\"\n  validations={[\n    {\n      rule: isNotEmptyString(),\n      message: 'This field can\\'t be empty',\n    },\n  ]}\n>\n")),Object(i.b)("h3",{id:"isnotemptyarray"},"isNotEmptyArray()"),Object(i.b)("p",null,"Test if an array is not empty."),Object(i.b)("pre",null,Object(i.b)("code",t({parentName:"pre"},{className:"language-jsx"}),"import { isNotEmptyArray } from '@formiz/validations'\n\n<MyField\n  name=\"fieldName\"\n  validations={[\n    {\n      rule: isNotEmptyArray(),\n      message: 'This array can\\'t be empty',\n    },\n  ]}\n>\n")),Object(i.b)("h3",{id:"isemail"},"isEmail()"),Object(i.b)("p",null,"Test if a string is an valid email."),Object(i.b)("pre",null,Object(i.b)("code",t({parentName:"pre"},{className:"language-jsx"}),"import { isEmail } from '@formiz/validations'\n\n<MyField\n  name=\"fieldName\"\n  validations={[\n    {\n      rule: isEmail(),\n      message: 'This is not a valid email',\n    },\n  ]}\n>\n")),Object(i.b)("h3",{id:"isnumber"},"isNumber()"),Object(i.b)("p",null,"Test if the value is a number."),Object(i.b)("pre",null,Object(i.b)("code",t({parentName:"pre"},{className:"language-jsx"}),"import { isNumber } from '@formiz/validations'\n\n<MyField\n  name=\"fieldName\"\n  validations={[\n    {\n      rule: isNumber(),\n      message: 'This is not a number',\n    },\n  ]}\n>\n")),Object(i.b)("h3",{id:"isminnumbermin"},"isMinNumber(min)"),Object(i.b)("p",null,"Test if the value is a number and under a max value."),Object(i.b)("pre",null,Object(i.b)("code",t({parentName:"pre"},{className:"language-jsx"}),"import { isMinNumber } from '@formiz/validations'\n\n<MyField\n  name=\"fieldName\"\n  validations={[\n    {\n      rule: isMinNumber(10),\n      message: 'Should be a number over 10',\n    },\n  ]}\n>\n")),Object(i.b)("h3",{id:"ismaxnumbermax"},"isMaxNumber(max)"),Object(i.b)("p",null,"Test if the value is a number and under a max value."),Object(i.b)("pre",null,Object(i.b)("code",t({parentName:"pre"},{className:"language-jsx"}),"import { isMaxNumber } from '@formiz/validations'\n\n<MyField\n  name=\"fieldName\"\n  validations={[\n    {\n      rule: isMaxNumber(10),\n      message: 'Should be a number under 10',\n    },\n  ]}\n>\n")),Object(i.b)("h3",{id:"isinrangenumbermin-max"},"isInRangeNumber(min, max)"),Object(i.b)("p",null,"Test if the value is a number and in a range between a min and a max."),Object(i.b)("pre",null,Object(i.b)("code",t({parentName:"pre"},{className:"language-jsx"}),"import { isInRangeNumber } from '@formiz/validations'\n\n<MyField\n  name=\"fieldName\"\n  validations={[\n    {\n      rule: isInRangeNumber(1, 5),\n      message: 'Should be a number between 1 and 5',\n    },\n  ]}\n>\n")),Object(i.b)("h3",{id:"ispercentage"},"isPercentage()"),Object(i.b)("p",null,"Test if the value is a number between 0 and 100."),Object(i.b)("pre",null,Object(i.b)("code",t({parentName:"pre"},{className:"language-jsx"}),"import { isInRangeNumber } from '@formiz/validations'\n\n<MyField\n  name=\"fieldName\"\n  validations={[\n    {\n      rule: isPercentage(),\n      message: 'This is not a valid percentage',\n    },\n  ]}\n>\n")),Object(i.b)("h3",{id:"islengthlength"},"isLength(length)"),Object(i.b)("p",null,"Test if a string or an array has a specific length."),Object(i.b)("pre",null,Object(i.b)("code",t({parentName:"pre"},{className:"language-jsx"}),"import { isLength } from '@formiz/validations'\n\n<MyField\n  name=\"fieldName\"\n  validations={[\n    {\n      rule: isLength(4),\n      message: 'This has not a length of 4',\n    },\n  ]}\n>\n")),Object(i.b)("h3",{id:"isminlengthmin"},"isMinLength(min)"),Object(i.b)("p",null,"Test if a string or an array has a minimum length."),Object(i.b)("pre",null,Object(i.b)("code",t({parentName:"pre"},{className:"language-jsx"}),"import { isMinLength } from '@formiz/validations'\n\n<MyField\n  name=\"fieldName\"\n  validations={[\n    {\n      rule: isMinLength(4),\n      message: 'This should at least have a length of 4',\n    },\n  ]}\n>\n")),Object(i.b)("h3",{id:"ismaxlengthmax"},"isMaxLength(max)"),Object(i.b)("p",null,"Test if a string or an array has a maximum length."),Object(i.b)("pre",null,Object(i.b)("code",t({parentName:"pre"},{className:"language-jsx"}),"import { isMaxLength } from '@formiz/validations'\n\n<MyField\n  name=\"fieldName\"\n  validations={[\n    {\n      rule: isMaxLength(4),\n      message: 'This should have a length of 4 or less',\n    },\n  ]}\n>\n")))}o.isMDXComponent=!0},169:function(e,n,a){"use strict";a.d(n,"a",(function(){return l})),a.d(n,"b",(function(){return c}));var i=a(0),t=a.n(i),r=t.a.createContext({}),s=function(e){var n=t.a.useContext(r),a=n;return e&&(a="function"==typeof e?e(n):Object.assign({},n,e)),a},l=function(e){var n=s(e.components);return t.a.createElement(r.Provider,{value:n},e.children)};var m="mdxType",o={inlineCode:"code",wrapper:function(e){var n=e.children;return t.a.createElement(t.a.Fragment,{},n)}},u=Object(i.forwardRef)((function(e,n){var a=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,m=function(e,n){var a={};for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&-1===n.indexOf(i)&&(a[i]=e[i]);return a}(e,["components","mdxType","originalType","parentName"]),u=s(a),c=i,b=u[l+"."+c]||u[c]||o[c]||r;return a?t.a.createElement(b,Object.assign({},{ref:n},m,{components:a})):t.a.createElement(b,Object.assign({},{ref:n},m))}));function c(e,n){var a=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=a.length,s=new Array(r);s[0]=u;var l={};for(var o in n)hasOwnProperty.call(n,o)&&(l[o]=n[o]);l.originalType=e,l[m]="string"==typeof e?e:i,s[1]=l;for(var c=2;c<r;c++)s[c]=a[c];return t.a.createElement.apply(null,s)}return t.a.createElement.apply(null,a)}u.displayName="MDXCreateElement"},592:function(e,n,a){"use strict";var i=a(0),t=a.n(i),r=a(13),s=a.n(r),l=function(e){var n=e.of;return t.a.createElement("div",{className:"callout is-warning"},"Work in Progress."," ",t.a.createElement("strong",null,n)," ","is not implemented yet.")};l.propTypes={of:s.a.string},l.defaultProps={of:"This"};var m=function(e){var n=e.of;return t.a.createElement("div",{className:"callout is-warning"},"Work in Progress."," ",t.a.createElement("strong",null,"@formiz/",n)," ","is not published on NPM yet.")};m.propTypes={of:s.a.string},m.defaultProps={of:"core"}}}]);